#
# A Small World is a curated 2.5D Minecraft experience.
# Copyright (C) 2021 Dreta / Gabriel Leen
#
# A Small World is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# A Small World is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with A Small World.  If not, see <https://www.gnu.org/licenses/>.
#

# Sent if ASW can't find a scene with the provided ID.
# NOTE: This MUST be a string. You CAN NOT use a chat component here.
scene-not-found: "This scene don't exist."

# Messages related to /aswreload.
reload:
  # Message sent when config.yml and messages.yml is reloaded.
  core-reloaded:
    text: "Successfully reloaded the core configurations of A Small World."
    color: "green"
  # Messages related to /aswreload player.
  player:
    # Warning message for reloading players.
    warning:
      - text: "Warning: Reloading players can cause strange issues such as data inconsistencies and players suddenly being teleported to another scene with their NPC not being with them. Before reloading, ask the player to leave ASW, or you risk creating a terrible experience for players. To continue, type in "
        color: "red"
      - text: "/aswreload player confirm (your arguments)"
        color: "yellow"
      - text: "."
        color: "red"
    # Message sent when the reload is successful.
    # Available placeholders: {NAME}, {DISPLAY_NAME}
    success:
      - text: "Successfully reloaded the player data of "
        color: "green"
      - text: "{DISPLAY_NAME}"
        color: "yellow"
      - text: ". If you encounter issues with the NPC being in the wrong scene for the reloaded player, delete the entire line starting with "
        color: "green"
      - text: "last-location" # I know people will be stupid enough to disregard the warnings
        color: "yellow"
      - text: " in that player's data file."
        color: "green"

# Messages related to /aswskin.
skin:
  get:
    # Message sent for the skin of a player.
    # Available placeholders: {NAME}, {DISPLAY_NAME}, {SKIN_ID}
    result:
      - text: "{DISPLAY_NAME}"
        color: "yellow"
      - text: " is using skin "
        color: "green"
      - text: "{SKIN_ID}"
        color: "yellow"
      - text: "."
        color: "green"
  set:
    # Message sent when the specified skin don't exist.
    skin-not-found:
      text: "The skin don't exist."
      color: "red"
    # Message sent when the skin is successfully set.
    # Available placeholders: {NAME}, {DISPLAY_NAME}, {SKIN_ID}
    success:
      - text: "Successfully set "
        color: "green"
      - text: "{DISPLAY_NAME}"
        color: "yellow"
      - text: "'s skin to "
        color: "green"
      - text: "{SKIN_ID}"
        color: "yellow"
      - text: "."
        color: "green"

# Messages related to the command /aswscene.
# Formatted as Minecraft chat components. See config.yml
# for more examples.
scene:
  # Messages related to /aswscene enter.
  enter:
    # Sent if scene.default-scene isn't a scene.
    fail-not-found:
      text: "The default scene isn\'t specified or isn\'t a scene (config.yml, scene.default-scene). Please contact a server administrator."
      color: "red"
  # Messages related to /aswscene leave.
  leave:
    # Sent if scene.leave-location is null.
    fail-no-target:
      text: "The leave location couldn\'t be found (config.yml, scene.leave-location). Please contact a server administrator."
      color: "red"
  # Messages related to /aswscene create.
  create:
    # Sent before the building gets generated.
    generation:
      text: "Generating the scene. The server might experience lag."
      color: "green"
    # Sent after the scene is created.
    # Available placeholders: {SCENE_NAME}, {SCENE_ID}, {SCENE_WORLD}
    # {SCENE_X}, {SCENE_Y}, {SCENE_Z}
    success:
      - text: "Successfully created the scene "
        color: "green"
      - text: "{SCENE_NAME}"
        color: "yellow"
      - text: " (ID: "
        color: "green"
      - text: "{SCENE_ID}"
        color: "yellow"
      - text: ")."
        color: "green"
  # Messages related to /aswscene unregister.
  unregister:
    # Sent after the scene is unregistered.
    # Available placeholders: {SCENE_NAME}, {SCENE_ID}.
    success:
      - text: "Successfully unregistered the scene "
        color: "green"
      - text: "{SCENE_NAME}"
        color: "yellow"
      - text: " (ID: "
        color: "green"
      - text: "{SCENE_ID}"
        color: "yellow"
      - text: "). You can now destroy the area."
        color: "green"
  # Messages related to /aswscene list.
  list:
    # Sent if there are no scenes.
    fail-empty:
      text: "There are no scenes."
      color: "red"

    # The formatting of each page of the list.
    # Available placeholders: {SCENES}, {PAGE}, {TOTAL_PAGES}, {PREVIOUS_PAGE_ARROW}, {NEXT_PAGE_ARROW}, {PREVIOUS_PAGE}, {NEXT_PAGE}
    # {SCENES} is a list of individual scenes. The format for each scene is configurable below. Includes a new line character at the end.
    # {PAGE} is the current page number.
    # {TOTAL_PAGES} is the total amount of pages.
    # {PREVIOUS_PAGE_ARROW} will be empty if this is the first page.
    # {NEXT_PAGE_ARROW} will be empty if this is the last page.
    # {PREVIOUS_PAGE} is the page number of the previous page, if applicable.
    # {NEXT_PAGE} is the page number of the next page, if applicable.
    page:
      - text: "-------- [Scenes] --------\n"
        color: "green"
      - text: "Page "
        color: "green"
      - text: "{PAGE}"
        color: "yellow"
      - text: " of "
        color: "green"
      - text: "{TOTAL_PAGES}\n"
        color: "yellow"
      - text: "{SCENES}"
      - text: "{PREVIOUS_PAGE_ARROW}"
        color: "yellow"
        hoverEvent:
          action: "show_text"
          value:
            text: "Previous Page"
        clickEvent:
          action: "run_command"
          value: "/aswscene list {PREVIOUS_PAGE}"
      - text: "                         " # Separator
      - text: "{NEXT_PAGE_ARROW}"
        color: "yellow"
        hoverEvent:
          action: "show_text"
          value:
            text: "Next Page"
        clickEvent:
          action: "run_command"
          value: "/aswscene list {NEXT_PAGE}"

    # The formatting of each individual scene.
    # Available placeholders: {SCENE_NAME}, {SCENE_ID}, {SCENE_WORLD}, {SCENE_X}, {SCENE_Y}, {SCENE_Z}
    page-item:
      - text: "{SCENE_NAME}"
        color: "yellow"
      - text: ": ID: "
        color: "green"
      - text: "{SCENE_ID}"
        color: "yellow"
      - text: "   Location: "
        color: "green"
      - text: "({SCENE_WORLD}, {SCENE_X}, {SCENE_Y}, {SCENE_Z})"
        color: "yellow"
  # Messages related to /aswscene teleport
  teleport:
    # Sent to the teleporter when teleportation of another player
    # is successful.
    #
    # Available placeholders: {TARGET_NAME}, {TARGET_DISPLAY_NAME}, {TARGET_SCENE_NAME}
    # {TARGET_NAME} is the raw name of the target player.
    # {TARGET_DISPLAY_NAME} is the display name (prefix+name+suffix) of the target player.
    success-other:
      - text: "Successfully teleported "
        color: "green"
      - text: "{TARGET_DISPLAY_NAME}"
        color: "yellow"
      - text: " to "
        color: "green"
      - text: "{TARGET_SCENE_NAME}"
        color: "yellow"
      - text: "."
        color: "green"
    # No messages will be sent if the teleportation is successful,
    # as this command will be used for teleportation with external
    # signs, etc.

# Messages related to /aswportal.
portal:
  # Sent if the portal don't exist.
  portal-dont-exist:
    text: "This portal don't exist."
    color: "red"

  # Messages related to /aswportal create.
  create:
    # Sent if the player is not in the source scene that they
    # specified.
    not-in-source-scene:
      text: "You are not in the source scene that you specified."
      color: "red"
    # Sent if the player is not in the target scene that they
    # specified.
    not-in-target-scene:
      text: "You are not in the target scene that you specified. Please start over."
      color: "red"
    # Sent to the player after they started to create a portal,
    # asking them to go to the target location.
    # Available placeholders: {SOURCE}, {TARGET}
    # {SOURCE} is the ID of the source scene.
    # {TARGET} is the ID of the target scene.
    go-to-target-scene:
      - text: "Please go to the target location of this portal, then "
        color: "green"
      - text: "[click here]"
        color: "yellow"
        hoverEvent:
          action: "show_text"
          value:
            text: "Set target location"
        clickEvent:
          action: "run_command"
          value: "/aswportal create {SOURCE} {TARGET}"
      - text: ", or "
        color: "green"
      - text: "[click here]"
        color: "yellow"
        hoverEvent:
          action: "show_text"
          value:
            text: "Cancel portal creation"
        clickEvent:
          action: "run_command"
          value: "/aswportal cancel"
      - text: " to cancel."
        color: "green"
    # Sent when the portal is successfully created.
    # Available placeholders: {ID}, {SOURCE_ID}, {SOURCE_NAME}, {SOURCE_X}, {SOURCE_Y}, {SOURCE_Z}, {TARGET_ID}, {TARGET_NAME}, {TARGET_X}, {TARGET_Y}, {TARGET_Z}
    # {ID} is the ID of this portal.
    # {SOURCE_ID} is the ID of the source scene (where the portal is in).
    # {SOURCE_NAME} is the name of the source scene.
    # {SOURCE_X} is the X position of THE PORTAL.
    # {SOURCE_Y} is the Y position of THE PORTAL.
    # {SOURCE_Z} is the Z position of THE PORTAL.
    # {TARGET_ID} is the ID of the target scene.
    # {TARGET_NAME} is the name of the target scene.
    # {TARGET_X} is the X position of WHERE THE PORTAL WILL TELEPORT TO.
    # {TARGET_Y} is the Y position of WHERE THE PORTAL WILL TELEPORT TO.
    # {TARGET_Z} is the Z position of WHERE THE PORTAL WILL TELEPORT TO.
    success:
      - text: "Successfully created the portal with ID "
        color: "green"
      - text: "{ID}"
        color: "yellow"
      - text: "."
        color: "green"
    # Sent when the player cancelled the creation of a new portal.
    cancel:
      - text: "Cancelled portal creation."
        color: "green"
  # Messages related to /aswportal unregister.
  unregister:
    # Sent when a portal is successfully unregistered.
    # Available placeholders: {ID}, {SCENE_ID}
    success:
      - text: "Successfully unregistered the portal with ID "
        color: "green"
      - text: "{ID}"
        color: "yellow"
      - text: " in scene "
        color: "green"
      - text: "{SCENE_ID}"
        color: "yellow"
      - text: "."
        color: "green"
  # Messages related to /aswportal list.
  list:
    # Sent if there are no portals in this scene.
    fail-empty:
      text: "There are no portals in this scene."
      color: "red"

    # The formatting of each page of the list.
    # Available placeholders: {PORTALS}, {SCENE_NAME}, {SCENE_ID}, {PAGE}, {TOTAL_PAGES}, {PREVIOUS_PAGE_ARROW}, {NEXT_PAGE_ARROW}, {PREVIOUS_PAGE}, {NEXT_PAGE}
    # {PORTALS} is a list of individual portals. The format for each portal is configurable below. Includes a new line character at the end.
    # {SCENE_NAME} is the name of the scene.
    # {SCENE_ID} is the ID of the scene.
    # {PAGE} is the current page number.
    # {TOTAL_PAGES} is the total amount of pages.
    # {PREVIOUS_PAGE_ARROW} will be empty if this is the first page.
    # {NEXT_PAGE_ARROW} will be empty if this is the last page.
    # {PREVIOUS_PAGE} is the page number of the previous page, if applicable.
    # {NEXT_PAGE} is the page number of the next page, if applicable.
    page:
      - text: "-------- [Portals] --------\n"
        color: "green"
      - text: "Showing portals in "
        color: "green"
      - text: "{SCENE_NAME}\n"
        color: "yellow"
      - text: "Page "
        color: "green"
      - text: "{PAGE}"
        color: "yellow"
      - text: " of "
        color: "green"
      - text: "{TOTAL_PAGES}\n"
        color: "yellow"
      - text: "{PORTALS}"
      - text: "Use "
        color: "green"
      - text: "/aswportal highlight <scene id> <portal id>"
        color: "yellow"
      - text: " to see where the portal is.\n"
        color: "green"
      - text: "{PREVIOUS_PAGE_ARROW}"
        color: "yellow"
        hoverEvent:
          action: "show_text"
          value:
            text: "Previous Page"
        clickEvent:
          action: "run_command"
          value: "/aswportal list {PREVIOUS_PAGE} {SCENE_ID}"
      - text: "                         " # Separator
      - text: "{NEXT_PAGE_ARROW}"
        color: "yellow"
        hoverEvent:
          action: "show_text"
          value:
            text: "Next Page"
        clickEvent:
          action: "run_command"
          value: "/aswportal list {NEXT_PAGE} {SCENE_ID}"

      # The formatting of each individual portal.
      # Available placeholders: {ID}, {TARGET_SCENE_ID}, {TARGET_SCENE_NAME}, {TARGET_X}, {TARGET_Y}, {TARGET_Z}
    page-item:
      - text: "{ID}"
        color: "yellow"
      - text: ": Target: "
        color: "green"
      - text: "{TARGET_SCENE_ID} {TARGET_SCENE_NAME} ({TARGET_X}, {TARGET_Y}, {TARGET_Z})"
        color: "yellow"
  # Messages related to /aswportal highlight.
  highlight:
    # Sent after the portal is highlighted.
    # Available placeholders: {HIGHLIGHT_SECONDS}
    success:
      - text: "Successfully highlighted portal. The highlight will disappear after "
        color: "green"
      - text: "{HIGHLIGHT_SECONDS}"
        color: "yellow"
      - text: " seconds."
        color: "green"
  # Messages related to /aswportal blocks.
  blocks:
    # Messages related to /aswportal blocks add.
    add:
      # Sent when a block is successfully added.
      # Available placeholders: {WORLD}, {BLOCK_X}, {BLOCK_Y}, {BLOCK_Z}, {PORTAL_ID}, {SCENE_ID}, {SCENE_NAME}
      success:
        - text: "Successfully added "
          color: "green"
        - text: "({WORLD}, {BLOCK_X}, {BLOCK_Y}, {BLOCK_Z})"
          color: "yellow"
        - text: " to portal "
          color: "green"
        - text: "{PORTAL_ID}"
          color: "yellow"
        - text: "."
          color: "green"

      # Sent if there are too many blocks in this portal.
      # Available placeholders: {PORTAL_ID}, {SCENE_ID}, {SCENE_NAME}, {MAX_BLOCKS}
      fail-too-many:
        - text: "A portal may only have "
          color: "red"
        - text: "{MAX_BLOCKS}"
          color: "yellow"
        - text: " blocks."
          color: "red"

      # Sent if this block is already in this portal.
      # Available placeholders: {WORLD}, {BLOCK_X}, {BLOCK_Y}, {BLOCK_Z}, {PORTAL_ID}, {SCENE_ID}, {SCENE_NAME}
      fail-duplicate:
        text: "This block is already in this portal."
        color: "red"
    # Messages related to /aswportal blocks remove.
    remove:
      # Sent when a block is successfully removed.
      # Available placeholders: {WORLD}, {BLOCK_X}, {BLOCK_Y}, {BLOCK_Z}, {PORTAL_ID}, {SCENE_ID}, {SCENE_NAME}
      success:
        - text: "Successfully removed "
          color: "green"
        - text: "({WORLD}, {BLOCK_X}, {BLOCK_Y}, {BLOCK_Z})"
          color: "yellow"
        - text: " from portal "
          color: "green"
        - text: "{PORTAL_ID}"
          color: "yellow"
        - text: "."
          color: "green"

      # Sent if the portal isn't in the specified location.
      # Available placeholders: {WORLD}, {BLOCK_X}, {BLOCK_Y}, {BLOCK_Z}, {PORTAL_ID}, {SCENE_ID}, {SCENE_NAME}
      fail:
        - text: "This portal isn't in "
          color: "red"
        - text: "({WORLD}, {BLOCK_X}, {BLOCK_Y}, {BLOCK_Z})"
          color: "yellow"
        - text: "."
          color: "red"
